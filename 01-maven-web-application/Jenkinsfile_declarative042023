pipeline{
  agent {
    label 'master'
  } 
  tools {
    maven 'maven3.9.1'
  }
  //options{}
  //triggers{}
  stages {
    stage('1Clone'){
      steps{
        sh "echo 'cloning the latest application version' "
        git "https://github.com/LandmakTechnology/maven-web-application"
        sh "echo 'latest application version available for testing and build' "
      }
    }
    stage('2TestBuild'){
      steps{
        sh "echo 'running JUnit-test-cases' "
        sh "echo 'testing must passed to create artifacts ' "
        sh "mvn clean package" 
      }
    }
   stage('3CodeQualityAnalysis') {
    steps{
        sh "echo setup sonarQube authentication"
        sh "echo 'Perfoming CodeQualityAnalysis' "
        sh "mvn sonar:sonar"      
    }
   }
   stage('4UploadArtifacts') {
    steps{
      sh "echo configure nexus authentication"
      //sh "mvn deploy"
      sh "echo artifacts uploaded"
    }
   }
     stage('5deploy') {
    steps{
      deploy adapters: [tomcat9(credentialsId: 'tomcat-credentials', path: '', url: 'http://100.26.217.86:8080/')], contextPath: null, war: 'target/*war'
        }
   }
   
   //stage('5deploy') {}
  }
post{ 
    always{
emailext body: '''Great job team.

liontechTech ''', recipientProviders: [buildUser(), developers()], subject: 'Build Success', to: 'myliontechtech@gmail.com'

    }
    success{
emailext body: '''Great job team.

liontechTech ''', recipientProviders: [buildUser(), developers()], subject: 'Build Success', to: 'myliontechtech@gmail.com'

    }
    failure{
emailext body: '''Please review this job.

liontechTech ''', recipientProviders: [buildUser(), developers()], subject: 'Build failed', to: 'myliontechtech@gmail.com'

    }
    
}

}
